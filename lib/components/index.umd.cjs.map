{"version":3,"file":"index.umd.cjs","sources":["../../packages/components/withInstall.ts","../../packages/components/Basic/MAlert/index.ts","../../packages/components/Basic/MButton/index.ts","../../packages/components/Basic/MDatePicker/index.ts","../../packages/components/Basic/MDialog/index.ts","../../packages/components/Basic/MDrawer/index.ts","../../packages/components/Basic/MInput/index.ts","../../packages/components/Basic/MSelect/index.ts","../../packages/components/Basic/MMessage/index.ts","../../packages/components/Basic/MMessageBox/index.ts","../../packages/components/Basic/MNotification/index.ts","../../packages/components/Basic/MPopconfirm/index.ts","../../packages/components/Basic/MTable/index.ts","../../packages/components/Basic/MTag/index.ts","../../packages/components/Basic/MUpload/index.ts","../../packages/components/Example/MTestTitle/src/props.ts","../../packages/components/Example/MTestTitle/src/index.vue?vue&type=script&setup=true&lang.ts","../../packages/components/Example/MTestTitle/index.ts","../../packages/components/index.ts"],"sourcesContent":["export default (comp: any, compName?: string) => {\n  for (let key in comp) {\n    if (/[A-Z]/.test(key[0])) {\n      comp[key].name = comp[key].name.replace(\"El\", \"M\");\n    }\n  }\n  if (!comp.name.includes(\"El\")) {\n    return comp;\n  }\n  if (comp.name) {\n    comp.name = comp.name.replace(\"El\", \"M\");\n  }\n  comp.install = (app: any) => {\n    // 当组件是 script setup 的形式时，会自动以为文件名注册，会挂载到组件的__name 属性上\n    // 所以要加上这个条件\n    const name = compName || comp.name || comp.__name;\n    // 注册组件\n    app.component(name, comp);\n    installItems(app, comp)\n  };\n\n  return comp;\n};\n\nconst installItems = (app: App, comp) => {\n    Object.entries(comp).forEach(([key, item]) => {\n      if (item.install && item.name.charAt(0) === 'M') {\n        app.component(item.name, item);\n      }\n    })\n }","import { ElAlert } from 'element-plus';\n\nimport withInstall from '../../withInstall';\n\nexport default withInstall(ElAlert);\n","import {\n  buttonProps,\n  ElButton,\n} from 'element-plus';\n\nimport withInstall from '../../withInstall';\n\nconst Button = withInstall(ElButton);\nexport default Button;\n","import { ElDatePicker } from 'element-plus';\n\nimport withInstall from '../../withInstall';\n\nexport default withInstall(ElDatePicker);\n","import { ElDialog } from 'element-plus';\n\nimport withInstall from '../../withInstall';\n\nexport default withInstall(ElDialog);\n","import { ElDrawer } from 'element-plus';\n\nimport withInstall from '../../withInstall';\n\nexport default withInstall(ElDrawer);\n","import { ElInput } from 'element-plus';\n\nimport withInstall from '../../withInstall';\n\nexport default withInstall(ElInput);\n","import { ElSelect } from 'element-plus';\n\nimport withInstall from '../../withInstall';\n\nexport default withInstall(ElSelect);\n\n\n// import withInstall from '../../withInstall';\n// import Component from './src/index.vue'\n\n// export const MSelect = withInstall(Component)\n// export default MDMSelectemo1\n        ","import { ElMessage } from 'element-plus';\n\nimport withInstall from '../../withInstall';\n\nexport default withInstall(ElMessage);\n","import { ElMessageBox } from 'element-plus';\n\nimport withInstall from '../../withInstall';\n\nexport default withInstall(ElMessageBox);\n","import { ElNotification } from 'element-plus';\n\nimport withInstall from '../../withInstall';\n\nexport default withInstall(ElNotification);\n","import { ElPopconfirm } from 'element-plus';\n\nimport withInstall from '../../withInstall';\n\nexport default withInstall(ElPopconfirm);\n","import { ElTable } from 'element-plus';\n\nimport withInstall from '../../withInstall';\n\nexport default withInstall(ElTable);\n","import { ElTag } from 'element-plus';\n\nimport withInstall from '../../withInstall';\n\nexport default withInstall(ElTag);\n","import { ElUpload } from 'element-plus';\n\nimport withInstall from '../../withInstall';\n\nexport default withInstall(ElUpload);\n","import type { ExtractPropTypes } from 'vue'\nexport const componentProps = {\n    /**\n     * @description text type\n     */\n    type: {\n        type: String,\n        values: ['primary', 'success', 'info', 'warning', 'danger', ''],\n        default: '',\n    },\n    /**\n     * @description text size\n     */\n    size: {\n        type: String,\n        values: ['default', 'small', 'large'],\n        default: '',\n    }\n}\nexport type ComponentProps = ExtractPropTypes<typeof componentProps>\n        ","import { defineComponent as _defineComponent } from 'vue'\nimport { renderSlot as _renderSlot, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { computed } from 'vue'\nimport { componentProps } from './props'\n\n\nexport default /*#__PURE__*/_defineComponent({\n  ...{\n    name: 'ElTestTitle',\n},\n  __name: 'index',\n  props: componentProps,\n  setup(__props, { expose: __expose }) {\n\nconst props = __props;\n\n\n__expose({\n\n})\n\n\nconst typeMap = new Map([\n    ['', ''],\n    ['primary', 'el-text--primary'],\n    ['success', 'el-text--success'],\n    ['info', 'el-text--info'],\n    ['warning', 'el-text--warning'],\n    ['danger', 'el-text--danger']\n])\nconst sizeMap = new Map([\n    ['', ''],\n    ['default', 'el-text--default'],\n    ['small', 'el-text--small'],\n    ['large', 'el-text--large'],\n])\n\nconst classNames = computed(() => [\n    'el-text',\n    typeMap.get(props.type),\n    sizeMap.get(props.size)\n])\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"span\", {\n    class: _normalizeClass(classNames.value)\n  }, [\n    _renderSlot(_ctx.$slots, \"default\", {}, undefined, true)\n  ], 2))\n}\n}\n\n})","import withInstall from '../../withInstall';\nimport Component from './src/index.vue'\n\nexport const MTestTitle = withInstall(Component)\nexport default MTestTitle\n        ","import { App } from 'vue';\n\nimport MAlert from './Basic/MAlert';\nimport MButton from './Basic/MButton';\nimport MDatePicker from './Basic/MDatePicker';\nimport MDialog from './Basic/MDialog';\nimport MDrawer from './Basic/MDrawer';\nimport MInput from './Basic/MInput';\nimport MSelect from './Basic/MSelect'\nimport MMessage from './Basic/MMessage';\nimport MMessageBox from './Basic/MMessageBox';\nimport MNotification from './Basic/MNotification';\nimport MPopconfirm from './Basic/MPopconfirm';\nimport MTable from './Basic/MTable';\nimport MTag from './Basic/MTag';\nimport MUpload from './Basic/MUpload';\nimport MTestTitle from './Example/MTestTitle'\n\nexport {\n  MAlert,\n  MButton,\n  MDatePicker,\n  MDialog,\n  MDrawer,\n  MInput,\n  MSelect,\n  MMessage,\n  MMessageBox,\n  MNotification,\n  MPopconfirm,\n  MTable,\n  MTag,\n  MUpload,\n  MTestTitle\n};\n\nconst components = [\n  MAlert,\n  MButton,\n  MPopconfirm,\n  MInput,\n  MSelect,\n  MDialog,\n  MDrawer,\n  MMessage,\n  MMessageBox,\n  MNotification,\n  MTag,\n  MTable,\n  MUpload,\n  MDatePicker,\n  MTestTitle\n];\n\nexport default {\n  install(app: App) {\n    components.forEach((item: any) => {\n      app.use(item)\n    });\n  },\n  version: \"0.0.42\",\n } as const;\n"],"names":["withInstall","comp","compName","key","app","name","installItems","item","MAlert","ElAlert","MButton","ElButton","MDatePicker","ElDatePicker","MDialog","ElDialog","MDrawer","ElDrawer","MInput","ElInput","MSelect","ElSelect","MMessage","ElMessage","MMessageBox","ElMessageBox","MNotification","ElNotification","MPopconfirm","ElPopconfirm","MTable","ElTable","MTag","ElTag","MUpload","ElUpload","componentProps","_sfc_main","_defineComponent","__props","__expose","props","typeMap","sizeMap","classNames","computed","_ctx","_cache","_openBlock","_createElementBlock","_normalizeClass","_renderSlot","MTestTitle$1","components","MTestTitle","index"],"mappings":"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"}